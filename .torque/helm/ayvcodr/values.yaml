# Default values for ayvcodr.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: ayvcodr
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations:
    eks.amazonaws.com/role-arn: ""
  # The name of the service account to use.
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8000"
  prometheus.io/path: "/metrics"

podSecurityContext:
  fsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8000

ingress:
  enabled: true
  className: "alb"
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/certificate-arn: ""
    alb.ingress.kubernetes.io/wafv2-acl-arn: ""
  hosts:
  - host: api.ayvcodr.com
    paths:
    - path: /
      pathType: Prefix
  tls: []

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Environment variables
env:
  ENVIRONMENT: production
  LOG_LEVEL: INFO
  PORT: "8000"

# Secret environment variables (will be populated from AWS Secrets Manager)
secretEnv:
  DB_HOST: ""
  DB_NAME: ""
  DB_USER: ""
  DB_PASSWORD: ""

# Health check configuration
healthCheck:
  enabled: true
  path: /health
  port: 8000
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

# Readiness probe configuration
readinessProbe:
  enabled: true
  path: /health
  port: 8000
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3
  successThreshold: 1

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Network policy
networkPolicy:
  enabled: true
  ingress:
    enabled: true
    from:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    - namespaceSelector:
        matchLabels:
          name: ayvcodr
  egress:
    enabled: false  # Allow all egress by default

# Monitoring
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    port: 8000
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s

# PostgreSQL (if using in-cluster database)
postgresql:
  enabled: false
  auth:
    username: ayvcodr
    database: ayvcodr
    existingSecret: ayvcodr-db-secret
    secretKeys:
      adminPasswordKey: postgres-password
      userPasswordKey: password
  primary:
    persistence:
      enabled: true
      size: 8Gi

# Redis (for caching and sessions)
redis:
  enabled: false
  auth:
    enabled: true
    existingSecret: ayvcodr-redis-secret
    existingSecretPasswordKey: password

# AWS specific configurations
aws:
  region: us-east-1
  accountId: ""
  
  # ECR repository
  ecr:
    repository: ""
  
  # Secrets Manager
  secretsManager:
    enabled: true
    secretName: "ayvcodr/database"
  
  # Load Balancer Controller
  loadBalancerController:
    enabled: true
    roleArn: ""